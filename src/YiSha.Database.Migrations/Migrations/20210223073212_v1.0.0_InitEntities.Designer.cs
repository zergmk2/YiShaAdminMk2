// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YiSha.Data.DbContexts;

namespace YiSha.Database.Migrations.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20210223073212_v1.0.0_InitEntities")]
    partial class v100_InitEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("YiSha.Entity.ApiAuthorizeEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Authorize")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysApiAuthorize");
                });

            modelBuilder.Entity("YiSha.Entity.CodeTempletEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Flag")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysCodeTemplet");
                });

            modelBuilder.Entity("YiSha.Entity.DataDictDetailEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DictKey")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DictSort")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DictStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DictType")
                        .HasColumnType("TEXT");

                    b.Property<string>("DictValue")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ListClass")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysDataDictDetail");
                });

            modelBuilder.Entity("YiSha.Entity.DataDictEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DictSort")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DictType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysDataDict");
                });

            modelBuilder.Entity("YiSha.Entity.DepartmentEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DepartmentSort")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Enable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fax")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PrincipalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrincipalPhone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysDepartment");
                });

            modelBuilder.Entity("YiSha.Entity.LogApiEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExecuteParam")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExecuteResult")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ExecuteTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExecuteUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LogStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysLogApi");
                });

            modelBuilder.Entity("YiSha.Entity.LogLoginEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Browser")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExtraRemark")
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("IpLocation")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LogStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OS")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysLogLogin");
                });

            modelBuilder.Entity("YiSha.Entity.MenuAuthorizeEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AuthorizeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AuthorizeType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MenuId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SysMenuAuthorize");
                });

            modelBuilder.Entity("YiSha.Entity.MqttMsgEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Msg")
                        .HasColumnType("TEXT");

                    b.Property<string>("ThemeName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysMqttMsg");
                });

            modelBuilder.Entity("YiSha.Entity.MqttThemeEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsSubscribe")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ThemeName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysMqttTheme");
                });

            modelBuilder.Entity("YiSha.Entity.PositionEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PositionName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PositionSort")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysPosition");
                });

            modelBuilder.Entity("YiSha.Entity.RoleEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RoleSort")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RoleStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SysRole");
                });

            modelBuilder.Entity("YiSha.Entity.SystemManage.AreaEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AreaCode")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AreaLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AreaName")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParentAreaCode")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysArea");
                });

            modelBuilder.Entity("YiSha.Entity.SystemManage.AutoJobEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("CronExpression")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobGroupName")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("JobStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NextStartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysAutoJob");
                });

            modelBuilder.Entity("YiSha.Entity.SystemManage.AutoJobLogEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobGroupName")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LogStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysAutoJobLog");
                });

            modelBuilder.Entity("YiSha.Entity.SystemManage.BaseAreaEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CountyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ProvinceId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BaseAreaEntity");
                });

            modelBuilder.Entity("YiSha.Entity.SystemManage.LogOperateEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BusinessType")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExecuteParam")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExecuteResult")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ExecuteTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExecuteUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("IpLocation")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LogStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LogType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysLogOperate");
                });

            modelBuilder.Entity("YiSha.Entity.SystemManage.MenuEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Authorize")
                        .HasColumnType("TEXT");

                    b.Property<string>("MenuIcon")
                        .HasColumnType("TEXT");

                    b.Property<string>("MenuName")
                        .HasColumnType("TEXT");

                    b.Property<int>("MenuSort")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MenuTarget")
                        .HasColumnType("TEXT");

                    b.Property<int>("MenuType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MenuUrl")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysMenu");
                });

            modelBuilder.Entity("YiSha.Entity.UserBelongEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BelongId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BelongType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SysUserBelong");
                });

            modelBuilder.Entity("YiSha.Entity.UserEntity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("Birthday")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FirstVisit")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IsOnline")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IsSystem")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastVisit")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mobile")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Picture")
                        .HasColumnType("TEXT");

                    b.Property<string>("Portrait")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PreviousVisit")
                        .HasColumnType("TEXT");

                    b.Property<string>("QQ")
                        .HasColumnType("TEXT");

                    b.Property<string>("RealName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WeChat")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysUser");
                });
#pragma warning restore 612, 618
        }
    }
}
